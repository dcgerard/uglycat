// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>
// [[Rcpp::depends(dlib)]]
// [[Rcpp::plugins(cpp11)]]

using namespace Rcpp;

// dist_from_marg
Rcpp::NumericMatrix dist_from_marg(Rcpp::NumericVector g_cdf, Rcpp::NumericVector h_cdf, double rho);
RcppExport SEXP _uglycat_dist_from_marg(SEXP g_cdfSEXP, SEXP h_cdfSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type g_cdf(g_cdfSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type h_cdf(h_cdfSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(dist_from_marg(g_cdf, h_cdf, rho));
    return rcpp_result_gen;
END_RCPP
}
// corrlike
double corrlike(double atanh_rho, const NumericMatrix& lX, const NumericMatrix& lY, const NumericVector& lg, const NumericVector& lh);
RcppExport SEXP _uglycat_corrlike(SEXP atanh_rhoSEXP, SEXP lXSEXP, SEXP lYSEXP, SEXP lgSEXP, SEXP lhSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type atanh_rho(atanh_rhoSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type lX(lXSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type lY(lYSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type lg(lgSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type lh(lhSEXP);
    rcpp_result_gen = Rcpp::wrap(corrlike(atanh_rho, lX, lY, lg, lh));
    return rcpp_result_gen;
END_RCPP
}
// corr_optim
List corr_optim(double atanh_rho, const NumericMatrix& lX, const NumericMatrix& lY, const NumericVector& lg, const NumericVector& lh);
RcppExport SEXP _uglycat_corr_optim(SEXP atanh_rhoSEXP, SEXP lXSEXP, SEXP lYSEXP, SEXP lgSEXP, SEXP lhSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type atanh_rho(atanh_rhoSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type lX(lXSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type lY(lYSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type lg(lgSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type lh(lhSEXP);
    rcpp_result_gen = Rcpp::wrap(corr_optim(atanh_rho, lX, lY, lg, lh));
    return rcpp_result_gen;
END_RCPP
}
// bvnu
double bvnu(double dh, double dk, double r);
RcppExport SEXP _uglycat_bvnu(SEXP dhSEXP, SEXP dkSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dh(dhSEXP);
    Rcpp::traits::input_parameter< double >::type dk(dkSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(bvnu(dh, dk, r));
    return rcpp_result_gen;
END_RCPP
}
// bvnl
double bvnl(double dh, double dk, double r);
RcppExport SEXP _uglycat_bvnl(SEXP dhSEXP, SEXP dkSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dh(dhSEXP);
    Rcpp::traits::input_parameter< double >::type dk(dkSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(bvnl(dh, dk, r));
    return rcpp_result_gen;
END_RCPP
}
// pnormcop
double pnormcop(double x, double y, double rho);
RcppExport SEXP _uglycat_pnormcop(SEXP xSEXP, SEXP ySEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(pnormcop(x, y, rho));
    return rcpp_result_gen;
END_RCPP
}
// gen_like
NumericMatrix gen_like(NumericVector refvec, NumericVector sizevec, int ploidy, double seq, double bias, double od);
RcppExport SEXP _uglycat_gen_like(SEXP refvecSEXP, SEXP sizevecSEXP, SEXP ploidySEXP, SEXP seqSEXP, SEXP biasSEXP, SEXP odSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type refvec(refvecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sizevec(sizevecSEXP);
    Rcpp::traits::input_parameter< int >::type ploidy(ploidySEXP);
    Rcpp::traits::input_parameter< double >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< double >::type bias(biasSEXP);
    Rcpp::traits::input_parameter< double >::type od(odSEXP);
    rcpp_result_gen = Rcpp::wrap(gen_like(refvec, sizevec, ploidy, seq, bias, od));
    return rcpp_result_gen;
END_RCPP
}
// log_cum_sum_exp
NumericVector log_cum_sum_exp(NumericVector x);
RcppExport SEXP _uglycat_log_cum_sum_exp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(log_cum_sum_exp(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_uglycat_dist_from_marg", (DL_FUNC) &_uglycat_dist_from_marg, 3},
    {"_uglycat_corrlike", (DL_FUNC) &_uglycat_corrlike, 5},
    {"_uglycat_corr_optim", (DL_FUNC) &_uglycat_corr_optim, 5},
    {"_uglycat_bvnu", (DL_FUNC) &_uglycat_bvnu, 3},
    {"_uglycat_bvnl", (DL_FUNC) &_uglycat_bvnl, 3},
    {"_uglycat_pnormcop", (DL_FUNC) &_uglycat_pnormcop, 3},
    {"_uglycat_gen_like", (DL_FUNC) &_uglycat_gen_like, 6},
    {"_uglycat_log_cum_sum_exp", (DL_FUNC) &_uglycat_log_cum_sum_exp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_uglycat(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
